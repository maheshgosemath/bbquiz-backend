<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <query name="Genre.findGenreList">
        <![CDATA[
            from Genre g where g.status = 'A'
        ]]>
    </query>
    <query name="Company.findCompanyList">
        <![CDATA[
            from Company c where c.status = 'A'
        ]]>
    </query>
    <query name="CompanyCompetition.findCompetitionList">
        <![CDATA[
            from CompanyCompetition cc where cc.status = 'A'
        ]]>
    </query>
    <query name="QuizOptions.fetchOptionsForQuiz">
        <![CDATA[
            from QuizOptions op where op.quiz.quizSeq = :quizSeq and op.status = 'A'
        ]]>
    </query>
    <query name="Quiz.fetchQuizListByGenreCd">
        <![CDATA[
            select q.quizSeq from Quiz q where q.genre.genreCd = :genreCd and q.status = 'A' and q.genre.isSponsored = 'N'
            order by rand()
        ]]>
    </query>
    <query name="Quiz.fetchQuizListByGenreSeq">
        <![CDATA[
            select q.quizSeq from Quiz q where q.genre.genreSeq in (:genreSeqList) and q.status = 'A' and q.genre.isSponsored = 'N'
            order by rand()
        ]]>
    </query>
    <query name="Quiz.fetchSponsoredQuizList">
        <![CDATA[
            select q.quizSeq from Quiz q where q.status = 'A' and q.genre.isSponsored = 'Y'
            order by rand()
        ]]>
    </query>
    <query name="Participant.fetchUserByEmail">
        <![CDATA[
            from Participant p where p.email = :email and p.status = 'A'
        ]]>
    </query>
    <query name="CompetitionParticipant.fetchUserCompetitionDetails">
        <![CDATA[
            from CompetitionParticipant cp where cp.participant.email = :email and
            cp.competition.competitionSeq = :competitionSeq and cp.status = 'A'
        ]]>
    </query>
    <query name="CompetitionParticipant.fetchUserCompetitionDetailsByToken">
        <![CDATA[
            from CompetitionParticipant cp where cp.token = :token and cp.status = 'A'
        ]]>
    </query>
    <query name="CompanyCompetition.fetchCompanyCompetitionDetails">
        <![CDATA[
            from CompanyCompetition cc where cc.refCode = :refCd and cc.status = 'A'
        ]]>
    </query>
    <query name="CompanyCompetition.fetchCompanyCompetitionDetailsBySeq">
        <![CDATA[
            from CompanyCompetition cc where cc.company.companySeq = :companySeq and
            cc.competition.competitionSeq =:competitionSeq and cc.status = 'A'
        ]]>
    </query>
    <query name="QuizOptions.fetchQuizCorrectOption">
        <![CDATA[
            select qo.quiz.quizSeq as quizSeq, qo.quizOptionsSeq as optionSeq from QuizOptions qo where  qo.quiz.quizSeq = :quizSeq
            and qo.status = 'A' and qo.isCorrect = 'Y'
        ]]>
    </query>
    <query name="CompanyDomain.fetchCompanyDomain">
        <![CDATA[
            from CompanyDomain cd where cd.company.companySeq = :companySeq and cd.status = 'A'
        ]]>
    </query>
    <query name="Quiz.fetchAllQuiz">
        <![CDATA[
            from Quiz q where q.status = 'A'
        ]]>
    </query>
    <query name="CompanyCompetition.fetchActiveCompetitionByCompanyLocation">
        <![CDATA[
            from CompanyCompetition cc where cc.company.companySeq = :companySeq and cc.status = 'A'
            and (TIMEDIFF(current_timestamp , cc.startTime) > 0 and TIMEDIFF(cc.endTime, current_timestamp) > 0)
            and cc.locationMstr.locationMstrSeq = :locationSeq
        ]]>
    </query>
    <query name="CompanyCompetition.fetchClosedCompetitionByCompanyLocation">
        <![CDATA[
            from CompanyCompetition cc where cc.company.companySeq = :companySeq and cc.status = 'A'
            and TIMEDIFF(cc.endTime, current_timestamp) < 0
            and cc.locationMstr.locationMstrSeq = :locationSeq
        ]]>
    </query>
    <query name="CompanyCompetition.fetchUpcomingCompetitionByCompanyLocation">
        <![CDATA[
            from CompanyCompetition cc where cc.company.companySeq = :companySeq and cc.status = 'A'
            and TIMEDIFF(cc.startTime, current_timestamp) > 0
            and cc.locationMstr.locationMstrSeq = :locationSeq
        ]]>
    </query>
    <query name="CompanyCompetition.fetchCompetitionByToken">
        <![CDATA[
            from CompanyCompetition cc where cc.refCode = :refCode and cc.status = 'A'
        ]]>
    </query>
    <query name="CompetitionParticipant.fetchCompetitionParticipantCount">
        <![CDATA[
            select count(*) from CompetitionParticipant cp where  cp.status = 'A' and
            cp.competition.competitionSeq = :competitionSeq and cp.companySeq = :companySeq
        ]]>
    </query>
    <query name="CompetitionParticipant.fetchTopParticipants">
        <![CDATA[
            select sum(cp.score) as score, cp.participant.name as name from CompetitionParticipant cp where cp.participant.status = 'A'
            and cp.status = 'A' and cp.submitted = 'Y'
            and cp.companySeq = :companySeq
            group by cp.participant.participantSeq
            order by score desc
        ]]>
    </query>
    <query name="CompetitionParticipant.fetchTopCompetitionParticipants">
        <![CDATA[
            select cp.score as seq, cp.participant.name as name from CompetitionParticipant cp where cp.participant.status = 'A'
            and cp.status = 'A' and cp.submitted = 'Y'
            and cp.competition.competitionSeq = :competitionSeq and cp.companySeq = :companySeq
            order by cp.score desc, cp.timeTaken desc, cp.startTime asc
        ]]>
    </query>
    <query name="CompetitionParticipant.fetchTopCompetitionParticipantsByLocation">
        <![CDATA[
            select cp.score as seq, cp.participant.name as name from CompetitionParticipant cp
            where cp.participant.status = 'A'
            and cp.status = 'A' and cp.submitted = 'Y'
            and cp.competition.competitionSeq = :competitionSeq and cp.companySeq = :companySeq
            and cp.participant.userProfile.userProfileSeq in (select upd.userProfile.userProfileSeq from UserProfileDetail upd where upd.locationMstr.locationMstrSeq = :locationSeq)
            order by cp.score desc, cp.timeTaken desc, cp.startTime asc
        ]]>
    </query>
    <query name="UserToken.fetchUserToken">
        <![CDATA[
            from UserToken ut where ut.userToken = :token
        ]]>
    </query>
    <query name="UserProfileDetail.fetchUserProfileDetailBySeq">
        <![CDATA[
            from UserProfileDetail up where up.userProfile.userProfileSeq = :userProfileSeq
        ]]>
    </query>
    <query name="LocationMstr.fetchAllLocations">
        <![CDATA[
            from LocationMstr lm where lm.status = 'A'
        ]]>
    </query>
    <query name="CompanyLocation.fetchLocationsByCompany">
        <![CDATA[
            from CompanyLocation cl where cl.company.companySeq = :companySeq and cl.status = 'A'
        ]]>
    </query>
    <query name="UserProfile.fetchUserProfileByUserId">
        <![CDATA[
            from UserProfile up where up.userId = :userId and up.status = 'A'
        ]]>
    </query>
    <query name="UserGenre.fetchUserGenre">
        <![CDATA[
            from UserGenre ug where ug.userProfile.userProfileSeq = :userProfileSeq and ug.status = 'A'
        ]]>
    </query>
    <query name="CompanyCompetitionText.fetchCompanyCompetitionText">
        <![CDATA[
            from CompanyCompetitionText cct where cct.companySeq = :companySeq and cct.status = 'A'
        ]]>
    </query>
</hibernate-mapping>
